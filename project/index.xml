<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Thomas George Thomas</title><link>https://thomas-george-t.github.io/project/</link><description>Recent content in Projects on Thomas George Thomas</description><generator>Source Themes academia (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright &amp;copy; {year}</copyright><lastBuildDate>Tue, 12 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thomas-george-t.github.io/project/index.xml" rel="self" type="application/rss+xml"/><item><title>Olympic History Analytics</title><link>https://thomas-george-t.github.io/project/olympic-history-analytics-in-r/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/olympic-history-analytics-in-r/</guid><description/></item><item><title>Retro Movies Recommender</title><link>https://thomas-george-t.github.io/project/retro-movies-recommender/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/retro-movies-recommender/</guid><description/></item><item><title>Clustering Paris and London</title><link>https://thomas-george-t.github.io/project/clustering-paris-and-london/</link><pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/clustering-paris-and-london/</guid><description>&lt;p>The purpose of this project was to explore the cities of London and Paris and see how attractive it is to potential tourists and migrants. We explored both the cities based on their postal codes and then extrapolated the common venues present in each of the neighbourhoods finally concluding with clustering similar neighbourhoods together.&lt;/p>
&lt;p>We could see that each of the neighbourhoods in both the cities have a wide variety of experiences to offer which is unique in it&amp;rsquo;s own way. The cultural diversity is quite evident which also gives the feeling of a sense of inclusion.&lt;/p>
&lt;p>Both Paris and London seem to offer a vacation stay or a romantic getaway with a lot of places to explore, beautiful landscapes, amazing food and a wide variety of culture. Overall, it&amp;rsquo;s up to the stakeholders to decide which experience they would prefer more and which would more to their liking.&lt;/p></description></item><item><title>Treatment Cost Prediction</title><link>https://thomas-george-t.github.io/project/treatment-cost-prediction/</link><pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/treatment-cost-prediction/</guid><description>&lt;p>&lt;strong>Linear regression&lt;/strong> is one of the most important algorithms under the supervised learning category in Machine Learning. It is also the simplest and commonly used model for predictive analysis. Using this we explore the personal health dataset and predict treatment and insurance costs.&lt;/p>
&lt;p>In this use case, concepts of linear regression, EDA, feature engineering and selection,R-squared and Mean Squared error are explained effectively.&lt;/p></description></item><item><title>Covid 19 Tweet Data Scraping</title><link>https://thomas-george-t.github.io/project/covid-19-tweet-data-scraping/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/covid-19-tweet-data-scraping/</guid><description/></item><item><title>File Processing Comparative Analytics</title><link>https://thomas-george-t.github.io/project/file-processing-comparative-analytics/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/file-processing-comparative-analytics/</guid><description>&lt;p>We conduct a Data Science experiment &lt;em>(of sorts)&lt;/em> where we compare and benchmark popular languages and execution engines. We find out which languages among &lt;strong>Java&lt;/strong>, &lt;strong>Scala&lt;/strong> and &lt;strong>Python&lt;/strong> is the quickest or slowest. Similarly, we compare and benchmark execution engines like &lt;strong>Hadoop&lt;/strong> and &lt;strong>Spark&lt;/strong>.&lt;/p>
&lt;p>&lt;strong>Observations&lt;/strong>&lt;/p>
&lt;p>For programming languages, we observe that Python has the least execution time for small and large files while Scala has the largest execution time. Interestingly, Scala takes 7 seconds more for processing the small file rather than the larger file.&lt;/p>
&lt;p>For execution engines, we observe that the Spark engine has the least execution time while Hadoopâ€™s Mapreduce engine has the highest execution time. This is in line with the claim that Spark is 100 times quicker than Hadoop.&lt;/p></description></item><item><title>Movie Analytics in Spark and Scala</title><link>https://thomas-george-t.github.io/project/movie-analytics/</link><pubDate>Sun, 20 May 2018 00:00:00 +0000</pubDate><guid>https://thomas-george-t.github.io/project/movie-analytics/</guid><description/></item></channel></rss>